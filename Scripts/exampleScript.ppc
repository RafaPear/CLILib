// Exemplo de Script para CLI - Point Processor CLI

print -------------------------------------
print         EXAMPLE SCRIPT
print -------------------------------------
wfu

print Bem-vindo ao CLI! Este script irá guiá-lo pelos comandos principais disponíveis.
wfu
clr

print -------------------------------------
print                HELP
print -------------------------------------
print Quando não souber como fazer algo, utilize o comando 'help'. Este comando mostra todos os comandos disponíveis.
print Também pode obter ajuda sobre um comando específico passando o nome como argumento: por exemplo, 'help ls'.
print << help
wfu
help
wfu
clr

print -------------------------------------
print               VERSION
print -------------------------------------
print Para verificar a versão atual da aplicação, utilize o comando 'version'.
print << version
wfu
version
wfu
clr

print -------------------------------------
print                PRINT
print -------------------------------------
print Pode imprimir mensagens no ecrã com o comando 'print', como esta que está a ver agora.
print << print Esta funcionalidade é útil para criar scripts mais interativos.
wfu
print Esta funcionalidade é útil para criar scripts mais interativos.
wfu
clr

print -------------------------------------
print                  CD
print -------------------------------------
print Vamos agora mudar de diretório. Isto é feito com o comando 'cd', seguido do nome do diretório.
print << cd Scripts
wfu
cd Scripts
wfu
clr

print -------------------------------------
print                  LS
print -------------------------------------
print Para ver os ficheiros e pastas dentro do diretório atual, use o comando 'ls'.
print << ls
wfu
ls
wfu
clr

print -------------------------------------
print            LOADSCRIPT
print -------------------------------------
print Pode carregar automaticamente outros scripts com o comando 'loadscript'.
print Neste exemplo, vamos carregar o script 'exampleScript.ppc'.
print << loadscript testExample.ppc
wfu
loadscript testExample.ppc
wfu
clr

print -------------------------------------
print              MEASURE
print -------------------------------------
print Se quiser medir quanto tempo demora a executar um comando, pode usar 'measure'.
print Vamos medir o tempo que demora a listar os ficheiros com 'ls'.
print << measure ls
wfu
measure ls
wfu
clr

print -------------------------------------
print                WAIT
print -------------------------------------
print É possível introduzir pausas no script com o comando 'wait',
print seguido do número de milésimos de segundo.
print << wait 2000
wfu
wait 2000
wfu
clr

print -------------------------------------
print             WaitForUser
print -------------------------------------
print Se o script precisar de esperar até que o utilizador responda pode utilizar o waitfor ou wfu.
print << wfu Espero por si para continuar.
wfu Espero por si para continuar.
clr

print -------------------------------------
print                 CLR
print -------------------------------------
print Para limpar o ecrã a qualquer momento, use o comando 'clr'.
wfu
clr
wfu
clr

print -------------------------------------
print                VAR
print -------------------------------------
print O comando 'var' permite criar ou modificar variáveis.
print Exemplo: var a 10
print << var a 10
wfu
var a 10
wfu
clr

print Pode listar todas as variáveis com 'var -l'
print << var -l
wfu
var -l
wfu
clr

print Para apagar uma variável use 'var -d <nome>'
print << var -d a
wfu
var -d a
wfu
clr

print Para modificar uma variável, basta usar o mesmo nome: var a 20
print << var a 20
wfu
var a 20
wfu
clr

print -------------------------------------
print           OPERAÇÕES VARIÁVEIS
print -------------------------------------
print Pode realizar operações matemáticas entre variáveis:
print 'add' soma, 'sub' subtrai, 'mult' multiplica, 'div' divide.
print Exemplo: var x 5 ; var y 3 ; add x y z
print << var x 5 ; var y 3 ; add x y z
wfu
var x 5 | var y 3 | add x y z
print O resultado fica na variável 'z'. Veja: var -l
print << var -l
wfu
var -l
print Também pode subtrair: sub x y r
print << sub x y r
wfu
sub x y r
print Multiplicar: mult x y m
print << mult x y m
wfu
mult x y m
print Dividir: div x y d
print << div x y d
wfu
div x y d
clr

print -------------------------------------
print                EXPR
print -------------------------------------
print O comando 'expr' avalia expressões matemáticas.
print Exemplo: expr (2+3)*4-1
print << expr (2+3)*4-1
wfu
expr (2+3)*4-1
print Pode usar variáveis: expr x+y*2
print << expr x+y*2
wfu
expr x+y*2
clr

print -------------------------------------
print                EDIT
print -------------------------------------
print O comando 'edit' abre um ficheiro no editor padrão do sistema.
print Exemplo: edit ficheiro.txt
print << edit ficheiro.txt
wfu
edit ficheiro.txt
clr

print -------------------------------------
print               MKCMD
print -------------------------------------
print O comando 'mkcmd' permite criar comandos personalizados a partir de um ficheiro JSON.
print Exemplo: mkcmd Commands/testCmd.json
print << mkcmd Commands/testCmd.json
wfu
mkcmd Commands/testCmd.json
print Depois pode usar o comando criado: test argumento
print << test argumento
wfu
test argumento
clr

print -------------------------------------
print           MKCMDTEMPLATE
print -------------------------------------
print O comando 'mkcmdtemplate' gera um ficheiro JSON de exemplo para criar comandos customizados.
print Exemplo: mkcmdtemplate meuComando.json
print << mkcmdtemplate meuComando.json
wfu
mkcmdtemplate meuComando.json
clr

print -------------------------------------
print                EXIT
print -------------------------------------
print Finalmente, para sair da aplicação CLI, use o comando 'exit'.
wfu
exit